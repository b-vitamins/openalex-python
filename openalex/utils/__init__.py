"""Utility functions and classes for OpenAlex client."""

from ..constants import (
    DOI_URL_PREFIX,
    MAG_PREFIX,
    OPENALEX_ID_PREFIX,
    ORCID_URL_PREFIX,
    PMID_PREFIX,
)
from .common import (
    empty_list_result,
    ensure_prefix,
    extract_entity_type,
    id_to_url,
    ids_equal,
    normalize_entity_id,
    normalize_id_batch,
    parse_entity_ids,
    validate_id_format,
    is_openalex_id,
    strip_id_prefix,
)
from .pagination import AsyncPaginator, Paginator
from .params import normalize_params
from .rate_limit import (
    AsyncRateLimiter,
    RateLimiter,
    SlidingWindowRateLimiter,
    async_rate_limited,
    rate_limited,
)
from .retry import (
    RetryConfig,
    RetryHandler,
    RetryContext,
    async_with_retry,
    is_retryable_error,
    exponential_backoff,
    linear_backoff,
    constant_backoff,
    retry_on_error,
    retry_with_rate_limit,
    with_retry,
)
from .text import (
    clean_html,
    clean_title,
    count_words,
    detect_language,
    extract_doi,
    extract_keywords,
    invert_abstract,
    normalize_author_name,
    truncate_abstract,
)

__all__ = [
    "DOI_URL_PREFIX",
    "MAG_PREFIX",
    "OPENALEX_ID_PREFIX",
    "ORCID_URL_PREFIX",
    "PMID_PREFIX",
    "AsyncPaginator",
    "AsyncRateLimiter",
    "Paginator",
    "RateLimiter",
    "RetryConfig",
    "RetryHandler",
    "RetryContext",
    "SlidingWindowRateLimiter",
    "async_rate_limited",
    "async_with_retry",
    "empty_list_result",
    "ensure_prefix",
    "extract_entity_type",
    "id_to_url",
    "ids_equal",
    "invert_abstract",
    "normalize_author_name",
    "normalize_entity_id",
    "normalize_id_batch",
    "is_openalex_id",
    "parse_entity_ids",
    "validate_id_format",
    "clean_title",
    "extract_doi",
    "truncate_abstract",
    "count_words",
    "extract_keywords",
    "clean_html",
    "detect_language",
    "is_retryable_error",
    "exponential_backoff",
    "linear_backoff",
    "constant_backoff",
    "normalize_params",
    "rate_limited",
    "retry_on_error",
    "retry_with_rate_limit",
    "strip_id_prefix",
    "with_retry",
]
