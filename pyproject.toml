[tool.poetry]
name = "openalex-python"
version = "0.1.0"
description = ""
authors = ["Ayan Das <bvits@riseup.net>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
certifi = ">=14.05.14"
six = ">=1.10"
python-dateutil = ">=2.5.3"
setuptools = ">=21.0.0"
urllib3 = ">=1.15.1"

[tool.poetry.group.dev.dependencies]
coverage = ">=4.0.3"
nose = ">=1.3.7"
pluggy = ">=0.3.1"
py = ">=1.4.31"
randomize = ">=0.13"
ruff = "^0.3.0"
mypy = "^1.0.0"
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
types-python-dateutil = "^2.8.0"
types-six = "^1.16.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "D",   # pydocstyle
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]  # Ignore docstring requirements in tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
exclude = [
    ".venv",
    "venv",
    "build",
    "dist",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=openalex_python",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["openalex_python"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]